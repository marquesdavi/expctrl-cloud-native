# Configuração do datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER:myuser}
quarkus.datasource.password=${DB_PASSWORD:secret}
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5435/expcrl-api-db

# Hibernate
quarkus.hibernate-orm.database.generation=none

# Flyway
quarkus.flyway.migrate-at-start=true
quarkus.flyway.locations=db/migration

# Porta REST
quarkus.http.port=8080

# Expor o endpoint OpenAPI
quarkus.smallrye-openapi.path=/openapi
# Sempre incluir Swagger UI na aplicação
quarkus.swagger-ui.always-include=true
# Caminho do Swagger UI
quarkus.swagger-ui.path=/swagger-ui

quarkus.hibernate-orm.jdbc.batch_size=50
quarkus.hibernate-orm.jdbc.order_inserts=true

# ??? Build-time (SmallRye JWT Build API) ??????????????????????????
smallrye.jwt.sign.key.location=privateKey.pem
smallrye.jwt.new-token.issuer=expctrl
smallrye.jwt.new-token.lifespan=3600

# ??? Runtime (MP-JWT para @Authenticated) ????????????????????????
quarkus.smallrye-jwt.enabled=true
quarkus.smallrye-jwt.token.header=Authorization
quarkus.smallrye-jwt.auth-mechanism=MP-JWT

# Injeta o publicKey.pem para verificar assinatura
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=expctrl

# Só autentica quando houver @Authenticated
quarkus.http.auth.proactive=false

# Logs detalhados de validação
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE



